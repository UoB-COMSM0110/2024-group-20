<diagram program="umletino" version="15.1"><zoom_level>7</zoom_level><element><id>UMLClass</id><coordinates><x>231</x><y>28</y><w>175</w><h>161</h></coordinates><panel_attributes>ScreenManager
--
- screens: HashMap&lt;ScreenType, Screen&gt; 
- currentScreen: Screen 
- player: Player 
--
- setupScreens()
+ getCurrentScreen(ScreenType): Screen 
+ setCurrentScreen(ScreenType)
+ getPlayer(): Player
+ display()
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>483</x><y>28</y><w>119</w><h>70</h></coordinates><panel_attributes>/Screen/
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>889</x><y>196</y><w>252</w><h>161</h></coordinates><panel_attributes>LevelScreen
--
- screenManager: ScreenManager
-bgImage, easyImage, hardImage, woodBoardImage: PImage
- easyButton, hardButton: ImageButton
- buttons: ArrayList&lt;ImageButton&gt; 
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
-  setEasyLevels()
-  setHardLevels()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>434</x><y>301</y><w>161</w><h>231</h></coordinates><panel_attributes>GameScreen
--
- screenManager: ScreenManager
- player Player
- levelMenu: Menu
- tutorial: Tutorial
- currentLevel: Level
- currentLevelNumber: int
- menuImage, tutorialImage: PImage
- menuButton, tutorialButton: ImageButton
- buttons: ArrayList&lt;ImageButton&gt; 
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
+ getPlayer(): Player
+ setLevel(int)
+ endLevel()
- otherDisplay()
- setButtons()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>644</x><y>420</y><w>154</w><h>147</h></coordinates><panel_attributes>WinScreen
--
- screenManager: ScreenManager
- player: Player
- bgImage, menuImage: PImage
- menuButton: ImageButton

--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>728</x><y>189</y><w>147</w><h>161</h></coordinates><panel_attributes>PlayerNameScreen
--
- screenManager: ScreenManager
- player Player
- displayName: String
- bgImage: PImage
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
+  addLetter(char)
+  deleteLetter()
-  updateDisplayName()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>623</x><y>14</y><w>280</w><h>147</h></coordinates><panel_attributes>StartScreen
--
- screenManager: ScreenManager
- player: Player
- bgImage, logoImage, startImage, scoreImage, exitImage: PImage
- startButton, scoreButton, exitButton: ImageButton
- buttons: ArrayList&lt;ImageButton&gt;
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>924</x><y>14</y><w>217</w><h>168</h></coordinates><panel_attributes>ScoreScreen
--
- screenManager: ScreenManager
- player Player
- bgImage, woodBoardImage, menuImage: PImage
- menuButton: ImageButton
 
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
+ printScoresFile
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>224</x><y>231</y><w>175</w><h>133</h></coordinates><panel_attributes>ImageButton
--
- buttonX, buttonY: float
- buttonWidth, buttonHeight: float
- buttonImage: PImage
- isMouseOver: boolean
--
+ display()
- update()
+ clicked(): boolean</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>231</x><y>546</y><w>217</w><h>182</h></coordinates><panel_attributes>Menu
--
- nextImage, skipImage, woodBoardImage: PImage
- menuX, menuY: float
- menuWidth, menuheight: float
- menuText: String
- stepNumber, totalSteps: int
- callBackNext, callbackSkip: ButtonCallBack
- nextButton, skipButton: ImageButton
- nextPressed: boolean
- levelTexts: String[]
--
+ display()
+ dispalyMenu(int)
+ clicked()
+ resetMenu()
+ mousePressed()
+ displayWraapedText(String, float, floar, float)</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>224</x><y>385</y><w>175</w><h>112</h></coordinates><panel_attributes>Tutorial
--
- menus: Menu[]
- currentStep, totalStep: int
--
+ display()
+ nextStep
+ skipTutorial()
+ resetTutorial()
+ mousePressed()
</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>819</x><y>371</y><w>329</w><h>357</h></coordinates><panel_attributes>Level
--
- gameScreen: GameScreen
- difficulty: Difficulty
- attackDirection: attackDirection
- budget: int
- groundList: ArrayList&lt;Ground&gt;
- pigList: ArrayList&lt;Pig&gt;
- birdBackStageList: ArrayList&lt;Bird&gt;
- birdFrontStageList: ArrayList&lt;Bird&gt;
-materialList: ArrayList&lt;material&gt;
- draggedMaterial: Material
- lastSelectedMaterial: Material
relativeDragPosition: PVector
- w: World
- ready: boolean
- timer: Timer
- bgImage, readyImage, groundImage: PImage
- woodButton, glassButtonstoneButton,readyButton,undoButton: ImageButton
- buttons: ArrayList&lt;ImageButton&gt; 
--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
-  setBudget(JSONObject)
+ getBudget()
- setAttackDirection(JSONObject)
- addGround(JSONObject)
- addBirdBackStage(JSONObject)
- setupWorld()
- checkWorldItemActions()
- timerActions
- setTimer()
- stageBird()
- zeroImpulses()
- buyResource(Resource): boolean
+ sellResource(Material): boolean
- otherDisplay()
+ numberPigsAlive(): int
+ numberPigsTotal(): int
- displayAttackDirection()
- setButtons()

</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>1008</x><y>770</y><w>147</w><h>56</h></coordinates><panel_attributes>Timer
--
- startTime: int
- interval: int
--
+ intervalFinished()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>0</x><y>35</y><w>147</w><h>182</h></coordinates><panel_attributes>Player
--
- playerName: String
- playerScore: int
- scoreSet, nameSet: boolean
- difficulty: Difficulty
--
+ setPlayerName(String)
+ getPlayerName(): String
+ isNameSet(): boolean
+ setScore: int
+ getPlayerScore: int
+ getDifficulty: Difficulty
+ setDifficulty(Difficulty)
+ deletePlayer()
+ updateScore(Level,int)
+ updateScoresFile()</panel_attributes><additional_attributes></additional_attributes></element><element><id>UMLClass</id><coordinates><x>644</x><y>581</y><w>154</w><h>147</h></coordinates><panel_attributes>LoseScreen
--
- screenManager: ScreenManager
- player: Player
- bgImage, menuImage: PImage
- menuButton: ImageButton

--
+ display();
+ mousePressed()
+ keyPressed()
+ mouseDragged()
+ mouseReleased()
+ mouseWheel(MouseEvent)
</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>595</x><y>42</y><w>42</w><h>21</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;40;10</additional_attributes></element><element><id>Relation</id><coordinates><x>539</x><y>91</y><w>203</w><h>140</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;180;270;180</additional_attributes></element><element><id>Relation</id><coordinates><x>581</x><y>91</y><w>357</w><h>91</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;110;490;110</additional_attributes></element><element><id>Relation</id><coordinates><x>553</x><y>91</y><w>364</w><h>119</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;120;500;120;500;150</additional_attributes></element><element><id>Relation</id><coordinates><x>483</x><y>91</y><w>21</w><h>224</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;300</additional_attributes></element><element><id>Relation</id><coordinates><x>497</x><y>91</y><w>161</w><h>532</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;290;170;290;170;740;210;740</additional_attributes></element><element><id>Relation</id><coordinates><x>525</x><y>91</y><w>308</w><h>329</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;230;250;230;250;450;420;450</additional_attributes></element><element><id>Relation</id><coordinates><x>511</x><y>91</y><w>175</w><h>343</h></coordinates><panel_attributes>lt=&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;270;230;270;230;470</additional_attributes></element><element><id>Relation</id><coordinates><x>140</x><y>56</y><w>105</w><h>21</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>130;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>336</x><y>77</y><w>161</w><h>168</h></coordinates><panel_attributes>lt=&lt;-
m1=0..n</panel_attributes><additional_attributes>210;10;150;10;150;190;10;190;10;220</additional_attributes></element><element><id>Relation</id><coordinates><x>392</x><y>329</y><w>49</w><h>231</h></coordinates><panel_attributes>lt=&lt;-
m1=0..n</panel_attributes><additional_attributes>30;310;30;10;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>1057</x><y>721</y><w>21</w><h>63</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;10;10;70</additional_attributes></element><element><id>Relation</id><coordinates><x>441</x><y>525</y><w>98</w><h>112</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>120;10;120;140;10;140</additional_attributes></element><element><id>Relation</id><coordinates><x>322</x><y>490</y><w>35</w><h>70</h></coordinates><panel_attributes>lt=&lt;-
m1=1..n</panel_attributes><additional_attributes>10;80;10;10</additional_attributes></element><element><id>Relation</id><coordinates><x>182</x><y>490</y><w>378</w><h>280</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>520;60;520;380;10;380;10;60;130;60;130;10</additional_attributes></element><element><id>UMLClass</id><coordinates><x>14</x><y>301</y><w>147</w><h>147</h></coordinates><panel_attributes>Game
--
gameImages: HashMap&lt;String, PImage&gt;
gameLevelData: HashMap&lt;Diffculty, JSONArray()&gt;
gameAudios: HashMap&lt;String, SoundFile&gt;
easyScoreTable, hardScoreTable: Table
screenManager: ScreenManager
--
setup()
draw()
loadImages()
loadGameAudios()
loadLevelJSONArrays()
loadTableFile()</panel_attributes><additional_attributes></additional_attributes></element><element><id>Relation</id><coordinates><x>98</x><y>168</y><w>147</w><h>147</h></coordinates><panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes><additional_attributes>10;190;10;150;110;150;110;10;190;10</additional_attributes></element><element><id>Relation</id><coordinates><x>399</x><y>56</y><w>98</w><h>28</h></coordinates><panel_attributes>lt=&lt;-
m1=0..n</panel_attributes><additional_attributes>10;10;120;10</additional_attributes></element></diagram>